<launch>

    <arg name="namespace" default="LM_Mapper"/>
    <arg name="launch_rviz" default="true" />
    <arg name="process_pcl_at_startup" default="true" />
    <arg name="map_3d" default="true" />
    <arg name="inertial_frame_id" default="/map" />
    <arg name="robot_base_link_frame_id" default="/robot" />
    <arg name="lidar_topic" default="/laser/scan/cloud" />
    <arg name="base_link_pose_topic" default="/vision_pose/pose_base_link" />
    <arg name="lidar_frame_id" default="laser_frame" />
    <arg name="map_resolution" default="0.075" />
    <arg name="max_range" default="6.0" />
    <arg name="min_range" default="0.25" />
    <arg name="memory_time" default="-10" />

    <!-- <group ns="$(arg namespace)"> -->
    <node pkg="mapper"
        type="mapper"
        name="mapper_node"
        output="screen">

        <!-- Namespace -->
        <param name="namespace" value="$(arg namespace)"/>

        <!-- Lidar topic -->
        <param name="lidar_topic" value="$(arg lidar_topic)"/>

        <!-- Base link pose topic (we assume that this topic returns the pose of the base_link w.r.t. the inertial frame) -->
        <param name="base_link_pose_topic" value="$(arg base_link_pose_topic)"/>

        <!-- tf frame ID for the lidars above -->
        <param name="lidar_frame_id" value="$(arg lidar_frame_id)"/>

        <!-- Robot Center tf Frame ID -->
        <param name="robot_base_link_frame_id" value="$(arg robot_base_link_frame_id)"/>

        <!-- Inertial frame name (used for getting tf tree information) -->
        <param name="inertial_frame_id" value="$(arg inertial_frame_id)"/>

        <!-- Set parameters for the mapper -->
        <param name="map_resolution" value="0.10"/>            <!-- meters -->
        <param name="max_range" value="$(arg max_range)"/>     <!-- meters -->
        <param name="min_range" value="$(arg min_range)"/>     <!-- meters -->

        <!-- Time to forget information (set as negative if infinity) -->
        <param name="memory_time" value="$(arg memory_time)"/> <!-- seconds -->

        <!-- Fading memory thread update rate (Hz) -->
        <param name="fading_memory_update_rate" value="1"/>    <!-- Hz -->

        <!-- Map inflation parameters -->
        <param name="inflate_radius_xy" value="0.225"/>       <!-- meters -->
        <param name="inflate_radius_z" value="0.225"/>        <!-- meters -->

        <!-- Camera FOV (radians): map is only updated within this FOV -->
        <!-- This parameter is currently not used until we use depth cameras -->
        <param name="cam_fov" value="0.8"/>                    <!-- radians -->

        <!-- Camera's width divided by height (unitless) -->
        <!-- This parameter is currently not used until we use depth cameras -->
        <param name="cam_aspect_ratio" value="1.3099"/>

        <!-- Map probabilities -->
        <param name="occupancy_threshold" value="0.5"/>     <!-- 0-1 -->
        <param name="probability_hit" value="0.7"/>         <!-- 0-1 -->
        <param name="probability_miss" value="0.25"/>       <!-- 0-1 -->
        <param name="clamping_threshold_min" value="0.1"/>  <!-- 0-1 -->
        <param name="clamping_threshold_max" value="0.9"/>  <!-- 0-1 -->

        <!-- Path Collision Checking parameters -->
        <param name="traj_compression_max_dev" value="0.01"/>     <!-- meters -->
        <param name="traj_compression_resolution" value="0.02"/>  <!-- meters -->
        <param name="collision_check_rate" value="10"/>           <!-- Hz -->

        <!-- Radius Collistion Checking parameters -->
        <param name="radius_collision_check" value="0.1"/>        <!-- meters -->

        <!-- Desired minimum distance from obstacles for path planning (in meters) -->
        <param name="desired_obstacle_planning_distance" value="0.3"/>

        <!-- Service names -->
        <param name="update_resolution" value="update_resolution"/>
        <param name="update_memory_time" value="update_memory_time"/>
        <param name="update_inflation_radius" value="update_inflation_radius"/>
        <param name="reset_map" value="reset_map"/>
        <param name="save_map" value="save_map"/>
        <param name="load_map" value="load_map"/>
        <param name="initialize_map_to_path_planning_config" value="initialize_map_to_path_planning_config"/>
        <param name="process_pcl" value="process_pcl"/>
        <param name="a_star_path_planning" value="a_star_path_planning"/>
        <param name="clear_a_star_visualization_rviz" value="clear_a_star_visualization_rviz"/>
        <param name="rrg_service" value="rrg"/>

        <!-- Marker publisher names -->
        <param name="obstacle_markers" value="obstacle_markers"/>
        <param name="free_space_markers" value="free_space_markers"/>
        <param name="inflated_obstacle_markers" value="inflated_obstacle_markers"/>
        <param name="inflated_free_space_markers" value="inflated_free_space_markers"/>
        <param name="frustum_markers" value="frustum_markers"/>
        <param name="obstacle_radius_markers" value="obstacle_radius_markers"/>
        <param name="discrete_trajectory_markers" value="discrete_trajectory_markers"/>
        <param name="path_planning_config_markers" value="path_planning_config_markers"/>
        
        <!-- Collision detection publisher names -->
        <param name="path_obstacle_detection" value="path_detected_obstacles"/>
        <param name="obstacle_radius_detection" value="radius_detected_obstacles"/>

        <!-- Path Planning publisher names -->
        <param name="graph_tree_marker_topic" value="graph_tree_path_planner"/>
        <param name="path_planning_path_markers" value="path_planning_path_markers"/>


        <!-- Path of mapper in computer: used for saving/loading maps -->
        <param name="local_path" value="$(find mapper)"/>

        <!-- Whether or not PCL data is processed at startup -->
        <!-- If chosen as false, pcl processing only starts after request through a service -->
        <param name="process_pcl_at_startup" value="$(arg process_pcl_at_startup)"/>

        <!-- Map in 3d or in a plane -->
        <param name="map_3d" value="$(arg map_3d)"/>            

    </node>

    <!-- </group> -->

    <!-- Launch RVIZ -->
    <group if="$(arg launch_rviz)">
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find mapper)/cfg/mapper.rviz"/>
    </group>

</launch>